/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package salies.client;

import com.formdev.flatlaf.FlatLightLaf;
import javax.swing.*;
import java.io.FileWriter;
import java.io.IOException;
import java.awt.Desktop;
import java.net.URI;
import java.util.HashMap;
import java.util.Objects;
import java.awt.Color;

/**
 *
 * @author Daniel
 */
public class MainWindow extends javax.swing.JFrame {
    private final ClientController controller;

    public MainWindow(ClientController controller) {
        this.controller = controller;

        FlatLightLaf.setup();
        initComponents();
        customInitComponents();
    }

    // Como o NetBeans pede para que eu não altere o código dele,
    // criaria uma initComponentes própria
    private void customInitComponents() {
        hashArea.setLineWrap(true);
        entradaArea.setLineWrap(true);
    }

    // Manda a mensagem para que o controlador encaminhe ao servidor
    private void sendMessage(String type, String body) {
        try {
            controller.messageHandler(type, body);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao enviar mensagem.\nVerifique o log para mais detalhes.",
                    "Erro", JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }

    // ProfileRenderer: seta o HTML no pane
    public void setRenderedHTML(String html) {
        //resPane.setText(html);
        // Salvando em arquivo temporário
        try{
            FileWriter fw = new FileWriter("temp.html");
            fw.write(html);
            fw.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao renderizar HTML.\nVerifique o log para mais detalhes.",
                    "Erro", JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }

        // Abrindo o arquivo temporário no navegador padrão do sistema
        try {
            Desktop.getDesktop().browse(URI.create("temp.html"));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao abrir o navegador.\nVerifique o log para mais detalhes.",
                    "Erro", JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }

    public void setStatsResult(String result) {
        // Parseando o resultado: monntando um HashMap para organizar melhor
        HashMap<String, String> stats = new HashMap<>();

        // Separando os campos
        String[] fields = result.split(";");

        // Agora em chaves e valores
        for (String field : fields) {
            String[] kv = field.split(":");
            Double val = Double.parseDouble(kv[1]);
            // Arredonda pra 3 casas decimais
            String valStr = String.format("%.3f", val).replace(",", ".");
            stats.put(kv[0], valStr);
        }

        // Mandando pra interface.
        meanField.setText(stats.get("mean"));
        medianField.setText(stats.get("median"));
        accpField.setText(stats.get("lacorrcoef"));
        cVarField.setText(stats.get("vc"));
        stdField.setText(stats.get("stdDev"));
        varField.setText(stats.get("variance"));
        skewField.setText(stats.get("skewness"));
    }

    public void setHashResult(String hash) {
        hashArea.setText(hash);
    }

    public void setVerifyHashResult(String result) {
        boolean res = Boolean.parseBoolean(result);
        hashResValueLabel.setText(res ? "positivo" : "negativo");
        hashResValueLabel.setForeground(res ? new Color(30, 100, 25) : new Color(100, 30, 25));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        htmlPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        realNameLabel = new javax.swing.JLabel();
        realNameField = new javax.swing.JTextField();
        bioLabel = new javax.swing.JLabel();
        bioScrollPane = new javax.swing.JScrollPane();
        bioTextArea = new javax.swing.JTextArea();
        locLabel = new javax.swing.JLabel();
        locField = new javax.swing.JTextField();
        avatarLabel = new javax.swing.JLabel();
        avatarBox = new javax.swing.JComboBox<>();
        nFollowersLabel = new javax.swing.JLabel();
        nFollowersBox = new javax.swing.JSpinner();
        nFollowingLabel = new javax.swing.JLabel();
        nFollowingBox = new javax.swing.JSpinner();
        renderBtn = new javax.swing.JButton();
        hashPanel = new javax.swing.JPanel();
        entradaLabel = new javax.swing.JLabel();
        hashLabel = new javax.swing.JLabel();
        hashResLabel = new javax.swing.JLabel();
        hashResValueLabel = new javax.swing.JLabel();
        algoLabel = new javax.swing.JLabel();
        algoBox = new javax.swing.JComboBox<>();
        entradaScrollPane = new javax.swing.JScrollPane();
        entradaArea = new javax.swing.JTextArea();
        hashScrollPane = new javax.swing.JScrollPane();
        hashArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        hashBtn = new javax.swing.JButton();
        verifyHashBtn = new javax.swing.JButton();
        statsPanel = new javax.swing.JPanel();
        numbersLabel = new javax.swing.JLabel();
        statsGuide = new javax.swing.JLabel();
        lagLabel = new javax.swing.JLabel();
        lagBox = new javax.swing.JSpinner();
        statsBtn = new javax.swing.JButton();
        resLabel = new javax.swing.JLabel();
        meanLabel = new javax.swing.JLabel();
        medianLabel = new javax.swing.JLabel();
        medianField = new javax.swing.JTextField();
        varLabel = new javax.swing.JLabel();
        varField = new javax.swing.JTextField();
        stdLabel = new javax.swing.JLabel();
        stdField = new javax.swing.JTextField();
        accpLabel = new javax.swing.JLabel();
        accpField = new javax.swing.JTextField();
        cVarField = new javax.swing.JTextField();
        cVarLabel = new javax.swing.JLabel();
        skewLabel = new javax.swing.JLabel();
        skewField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        numbersArea = new javax.swing.JTextArea();
        meanField = new javax.swing.JTextField();
        guideLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TP Final CDeP - Cliente");

        jTabbedPane.setPreferredSize(new java.awt.Dimension(520, 500));

        htmlPanel.setPreferredSize(new java.awt.Dimension(500, 212));

        usernameLabel.setText("Nome de usuário:");

        usernameField.setText("sonicsalies");

        realNameLabel.setText("Nome real:");

        realNameField.setText("Daniel Serezane");

        bioLabel.setText("Bio");

        bioTextArea.setColumns(20);
        bioTextArea.setRows(5);
        bioTextArea.setText("It's not a lake, it's an ocean.");
        bioScrollPane.setViewportView(bioTextArea);

        locLabel.setText("Localização");

        locField.setText("Martinópolis, SP");

        avatarLabel.setText("Avatar");

        avatarBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Zelda", "Purah", "Riju" }));

        nFollowersLabel.setText("nº seguidores");

        nFollowersBox.setModel(new javax.swing.SpinnerNumberModel(666, 0, null, 1));

        nFollowingLabel.setText("nº seguindo");

        nFollowingBox.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));

        renderBtn.setText("Renderizar");
        renderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout htmlPanelLayout = new javax.swing.GroupLayout(htmlPanel);
        htmlPanel.setLayout(htmlPanelLayout);
        htmlPanelLayout.setHorizontalGroup(
            htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(htmlPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(htmlPanelLayout.createSequentialGroup()
                        .addComponent(usernameLabel)
                        .addGap(5, 5, 5)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(realNameLabel)
                        .addGap(5, 5, 5)
                        .addComponent(realNameField))
                    .addGroup(htmlPanelLayout.createSequentialGroup()
                        .addComponent(locLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(locField, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(avatarLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(avatarBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(htmlPanelLayout.createSequentialGroup()
                        .addComponent(bioLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(htmlPanelLayout.createSequentialGroup()
                        .addComponent(bioScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(htmlPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nFollowersLabel)
                                    .addComponent(nFollowingLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nFollowingBox)
                                    .addComponent(nFollowersBox)))
                            .addGroup(htmlPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(renderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        htmlPanelLayout.setVerticalGroup(
            htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(htmlPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(realNameLabel)
                    .addComponent(realNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locLabel)
                    .addComponent(locField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(avatarLabel)
                    .addComponent(avatarBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(bioLabel)
                .addGap(5, 5, 5)
                .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(htmlPanelLayout.createSequentialGroup()
                        .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nFollowersBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nFollowersLabel))
                        .addGap(10, 10, 10)
                        .addGroup(htmlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nFollowingBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nFollowingLabel))
                        .addGap(10, 10, 10)
                        .addComponent(renderBtn))
                    .addComponent(bioScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Template HTML", htmlPanel);

        entradaLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        entradaLabel.setText("Entrada");

        hashLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hashLabel.setText("Hash");

        hashResLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hashResLabel.setText("Resultado:");

        hashResValueLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hashResValueLabel.setText("-");

        algoLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        algoLabel.setText("Algoritmo");

        algoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MD5", "SHA-1", "SHA-256" }));

        entradaArea.setColumns(20);
        entradaArea.setRows(5);
        entradaArea.setText("batata");
        entradaScrollPane.setViewportView(entradaArea);

        hashArea.setColumns(20);
        hashArea.setRows(5);
        hashScrollPane.setViewportView(hashArea);

        jLabel1.setText("Nota: espaços serão ignorados.");

        hashBtn.setText("Hash");
        hashBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashBtnActionPerformed(evt);
            }
        });

        verifyHashBtn.setText("Verificar");
        verifyHashBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyHashBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hashPanelLayout = new javax.swing.GroupLayout(hashPanel);
        hashPanel.setLayout(hashPanelLayout);
        hashPanelLayout.setHorizontalGroup(
            hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entradaLabel)
                    .addGroup(hashPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, hashPanelLayout.createSequentialGroup()
                                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, hashPanelLayout.createSequentialGroup()
                                        .addComponent(hashResLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hashResValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(hashPanelLayout.createSequentialGroup()
                                        .addComponent(algoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(algoBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(hashPanelLayout.createSequentialGroup()
                                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hashBtn)
                                    .addComponent(entradaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hashLabel)
                                    .addComponent(hashScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(verifyHashBtn))))
                .addGap(20, 20, 20))
        );
        hashPanelLayout.setVerticalGroup(
            hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algoLabel)
                    .addComponent(algoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entradaLabel)
                    .addComponent(hashLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hashScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(entradaScrollPane))
                .addGap(10, 10, 10)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hashBtn)
                    .addComponent(verifyHashBtn))
                .addGap(10, 10, 10)
                .addGroup(hashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hashResLabel)
                    .addComponent(hashResValueLabel))
                .addGap(20, 20, 20))
        );

        jTabbedPane.addTab("Hashing", hashPanel);

        numbersLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        numbersLabel.setText("Números");

        statsGuide.setText("Insira os números separados por vírgula, como no exemplo. Espaços serão ignorados.");

        lagLabel.setText("Lag para autocorrelação");

        lagBox.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        statsBtn.setText("Obter medidas");
        statsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsBtnActionPerformed(evt);
            }
        });

        resLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resLabel.setText("Resultado");

        meanLabel.setText("Média");

        medianLabel.setText("Mediana");

        medianField.setEditable(false);
        medianField.setToolTipText("");

        varLabel.setText("Var");

        varField.setEditable(false);
        varField.setToolTipText("");

        stdLabel.setText("Std");

        stdField.setEditable(false);
        stdField.setToolTipText("");

        accpLabel.setText("aCCP");

        accpField.setEditable(false);
        accpField.setToolTipText("");

        cVarField.setEditable(false);
        cVarField.setToolTipText("");

        cVarLabel.setText("cVar");

        skewLabel.setText("cAssimetria");

        skewField.setEditable(false);

        numbersArea.setColumns(20);
        numbersArea.setRows(5);
        numbersArea.setText("3.0, 2.0, 4.0, 2.0, 2.0, 10.0, 19.0, 18.0, 19.0, 8.0, 4.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 6.0, 7.0, 9.0, 1.0");
        jScrollPane1.setViewportView(numbersArea);

        meanField.setEditable(false);
        meanField.setToolTipText("");

        javax.swing.GroupLayout statsPanelLayout = new javax.swing.GroupLayout(statsPanel);
        statsPanel.setLayout(statsPanelLayout);
        statsPanelLayout.setHorizontalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resLabel)
                    .addComponent(statsGuide)
                    .addComponent(numbersLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statsPanelLayout.createSequentialGroup()
                        .addComponent(lagLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lagBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statsBtn))
                    .addGroup(statsPanelLayout.createSequentialGroup()
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statsPanelLayout.createSequentialGroup()
                                .addComponent(medianLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(statsPanelLayout.createSequentialGroup()
                                .addComponent(meanLabel)
                                .addGap(19, 19, 19)))
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(medianField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(meanField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(varLabel)
                            .addComponent(stdLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(stdField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(varField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(cVarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cVarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accpField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(skewLabel)
                            .addComponent(skewField, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        statsPanelLayout.setVerticalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(statsGuide)
                .addGap(5, 5, 5)
                .addComponent(numbersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lagLabel)
                    .addComponent(lagBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statsPanelLayout.createSequentialGroup()
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(meanLabel)
                            .addComponent(varLabel)
                            .addComponent(varField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(meanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medianLabel)
                            .addComponent(medianField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stdLabel)
                            .addComponent(stdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(statsPanelLayout.createSequentialGroup()
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accpLabel)
                            .addComponent(accpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skewLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cVarLabel)
                            .addComponent(cVarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skewField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        jTabbedPane.addTab("Medidas estatísticas", statsPanel);

        guideLabel.setText("Escolha um dos três serviços abaixo. Interaja com a interface para executar.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guideLabel)
                    .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(guideLabel)
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void renderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renderBtnActionPerformed
        // Verificando se todos os campos foram preenchidos
        if (realNameField.getText().isEmpty() || usernameField.getText().isEmpty() || bioTextArea.getText().isEmpty() || locField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        StringBuilder msgBuilder = new StringBuilder();
        // Construindo o query
        msgBuilder.append(realNameField.getText().replace(" ", "{{}}"));
        msgBuilder.append(" ");
        msgBuilder.append(usernameField.getText().replace(" ", ""));
        msgBuilder.append(" ");
        msgBuilder.append(bioTextArea.getText().replace(" ", "{{}}"));
        msgBuilder.append(" ");
        msgBuilder.append(locField.getText().replace(" ", "{{}}"));
        msgBuilder.append(" ");
        msgBuilder.append(avatarBox.getSelectedIndex());
        msgBuilder.append(" ");
        msgBuilder.append(nFollowersBox.getValue());
        msgBuilder.append(" ");
        msgBuilder.append(nFollowingBox.getValue());

        // Enviando a mensagem
        this.sendMessage("network", msgBuilder.toString());
    }//GEN-LAST:event_renderBtnActionPerformed

    private void statsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsBtnActionPerformed
        String[] numbers = numbersArea.getText().replace(" ", "").split(",");
        for (int i = 0; i < numbers.length; i++) {
            try {
                Double.parseDouble(numbers[i]);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Números preenchidos incorretamente. Verifique sua escrita.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Verificar se o lag é >= qtd de números. Se for, mostrar erro.
        if (Integer.parseInt(lagBox.getValue().toString()) >= numbers.length) {
            JOptionPane.showMessageDialog(this, "O lag deve ser menor que a quantidade de números.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Caso contrário, tudo bem! Prosseguindo.
        // Rejoin com ;
        String numbersStr = String.join(";", numbers);
        // Construindo a mensagem
        StringBuilder msgBuilder = new StringBuilder();
        msgBuilder.append(numbersStr);
        msgBuilder.append(" ");
        msgBuilder.append(lagBox.getValue().toString());

        this.sendMessage("stats", msgBuilder.toString());
    }//GEN-LAST:event_statsBtnActionPerformed

    private void hashBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashBtnActionPerformed
        // Verificando se todos os campos foram preenchidos
        if (entradaArea.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String in = entradaArea.getText().replace(" ", "");
        String algo = Objects.requireNonNull(algoBox.getSelectedItem()).toString();
        this.sendMessage("hash exec", algo + " " + in);
    }//GEN-LAST:event_hashBtnActionPerformed

    private void verifyHashBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyHashBtnActionPerformed
        // Verificando se todos os campos foram preenchidos
        if (entradaArea.getText().isEmpty() || hashArea.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String in = entradaArea.getText().replace(" ", "");
        String hash = hashArea.getText().replace(" ", "");
        String algo = Objects.requireNonNull(algoBox.getSelectedItem()).toString();
        this.sendMessage("hash verify", algo + " " + in + " " + hash);
    }//GEN-LAST:event_verifyHashBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accpField;
    private javax.swing.JLabel accpLabel;
    private javax.swing.JComboBox<String> algoBox;
    private javax.swing.JLabel algoLabel;
    private javax.swing.JComboBox<String> avatarBox;
    private javax.swing.JLabel avatarLabel;
    private javax.swing.JLabel bioLabel;
    private javax.swing.JScrollPane bioScrollPane;
    private javax.swing.JTextArea bioTextArea;
    private javax.swing.JTextField cVarField;
    private javax.swing.JLabel cVarLabel;
    private javax.swing.JTextArea entradaArea;
    private javax.swing.JLabel entradaLabel;
    private javax.swing.JScrollPane entradaScrollPane;
    private javax.swing.JLabel guideLabel;
    private javax.swing.JTextArea hashArea;
    private javax.swing.JButton hashBtn;
    private javax.swing.JLabel hashLabel;
    private javax.swing.JPanel hashPanel;
    private javax.swing.JLabel hashResLabel;
    private javax.swing.JLabel hashResValueLabel;
    private javax.swing.JScrollPane hashScrollPane;
    private javax.swing.JPanel htmlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JSpinner lagBox;
    private javax.swing.JLabel lagLabel;
    private javax.swing.JTextField locField;
    private javax.swing.JLabel locLabel;
    private javax.swing.JTextField meanField;
    private javax.swing.JLabel meanLabel;
    private javax.swing.JTextField medianField;
    private javax.swing.JLabel medianLabel;
    private javax.swing.JSpinner nFollowersBox;
    private javax.swing.JLabel nFollowersLabel;
    private javax.swing.JSpinner nFollowingBox;
    private javax.swing.JLabel nFollowingLabel;
    private javax.swing.JTextArea numbersArea;
    private javax.swing.JLabel numbersLabel;
    private javax.swing.JTextField realNameField;
    private javax.swing.JLabel realNameLabel;
    private javax.swing.JButton renderBtn;
    private javax.swing.JLabel resLabel;
    private javax.swing.JTextField skewField;
    private javax.swing.JLabel skewLabel;
    private javax.swing.JButton statsBtn;
    private javax.swing.JLabel statsGuide;
    private javax.swing.JPanel statsPanel;
    private javax.swing.JTextField stdField;
    private javax.swing.JLabel stdLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField varField;
    private javax.swing.JLabel varLabel;
    private javax.swing.JButton verifyHashBtn;
    // End of variables declaration//GEN-END:variables
}
